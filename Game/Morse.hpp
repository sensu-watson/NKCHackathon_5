//==============================================================================
//	Morse.hpp
//		ÉÇÅ[ÉãÉXêMçÜÉfÅ[É^ÇàµÇ§
//==============================================================================
#pragma once
#ifndef ___MORSE_HEADER___
#define ___MORSE_HEADER___
#include <string>
#include <map>
#include <vector>

#define ÅE false
#define Å| true

const std::map<char, std::vector<bool >> ChangeTable = {
	{ '≤',{ ÅE,Å| } },
	{ '€',{ ÅE,Å|,ÅE,Å|, } },
	{ ' ',{ Å|,ÅE,ÅE,ÅE, } },
	{ '∆',{ Å|,ÅE,Å|,ÅE, } },
	{ 'Œ',{ Å|,ÅE,ÅE } },
	{ 'Õ',{ ÅE } },
	{ 'ƒ',{ ÅE,ÅE,Å|,ÅE,ÅE } },

	{ '¡',{ ÅE,ÅE,Å|,ÅE, } },
	{ 'ÿ',{ Å|,Å|,ÅE } },
	{ '«',{ ÅE,ÅE,ÅE,ÅE, } },
	{ 'Ÿ',{ Å|,ÅE,Å|,Å|,ÅE } },
	{ '¶',{ ÅE,Å|,Å|,Å|, } },
	
	{ '‹',{ Å|,ÅE,Å| } },
	{ '∂',{ ÅE,Å|,ÅE,ÅE, } },
	{ '÷',{ Å|,Å| } },
	{ '¿',{ Å|,ÅE } },
	{ '⁄',{ Å|,Å|,Å| } },
	{ 'ø',{ Å|,Å|,Å|,ÅE, } },
	
	{ '¬',{ ÅE,Å|,Å|,ÅE, } },
	{ '»',{ Å|,Å|,ÅE,Å|, } },
	{ '≈',{ ÅE,Å|,ÅE } },
	{ '◊',{ ÅE,ÅE,ÅE } },
	{ '—',{ Å| } },
	
	{ '≥',{ ÅE,ÅE,Å| } },
//	{ '≤',{ ÅE,Å|,ÅE,ÅE,Å| } },
	{ '…',{ ÅE,ÅE,Å|,Å|, } },
	{ 'µ',{ ÅE,Å|,ÅE,ÅE,ÅE } },
	{ '∏',{ ÅE,ÅE,ÅE,Å|, } },
	{ '‘',{ ÅE,Å|,Å| } },
	{ 'œ',{ Å|,ÅE,ÅE,Å|, } },
	
	{ 'π',{ Å|,ÅE,Å|,Å|, } },
	{ 'Ã',{ Å|,Å|,ÅE,ÅE, } },
	{ '∫',{ Å|,Å|,Å|,Å|, } },
	{ '¥',{ Å|,ÅE,Å|,Å|,Å| } },
	{ '√',{ ÅE,Å|,ÅE,Å|,Å| } },
	
	{ '±',{ Å|,Å|,ÅE,Å|,Å| } },
	{ 'ª',{ Å|,ÅE,Å|,ÅE,Å| } },
	{ '∑',{ Å|,ÅE,Å|,ÅE,ÅE } },
	{ '’',{ Å|,ÅE,ÅE,Å|,Å| } },
	{ '“',{ Å|,ÅE,ÅE,ÅE,Å| } },
	{ '–',{ ÅE,ÅE,Å|,ÅE,Å| } },
	{ 'º',{ Å|,Å|,ÅE,Å|,ÅE } },
	
//	{ '¥',{ ÅE,Å|,Å|,ÅE,ÅE } },
	{ 'À',{ Å|,Å|,ÅE,ÅE,Å| } },
	{ '”',{ Å|,ÅE,ÅE,Å|,ÅE } },
	{ 'æ',{ ÅE,Å|,Å|,Å|,ÅE } },
	{ 'Ω',{ Å|,Å|,Å|,ÅE,Å| } },
	
	{ '›',{ ÅE,Å|,ÅE,Å|,ÅE } },
	{ 'ﬁ',{ ÅE,ÅE } },
	{ 'ﬂ',{ ÅE,ÅE,Å|,Å|,ÅE } },
	{ '-',{ ÅE,Å|,Å|,ÅE,Å|} }
};

class Morse {
public:
	std::vector<bool> signal;
	int Init(std::string str) {
		for each (auto it in str){
			for each(auto b in ChangeTable.find(it)->second) {
				signal.push_back(b);
			}
		}
		return 0;
	}

	std::string ToString() {
		std::string str = "";
		for each (bool b in signal) {
			str += (b ? 'Å|' : 'ÅE');
		}
		return str;
	}
};

#endif
// EOF